<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>goroutine on 介绍</title>
    <link>https://hitzhangjie.github.io/tags/goroutine/</link>
    <description>Recent content in goroutine on 介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 03 Dec 2017 16:49:09 +0800</lastBuildDate>
    
	<atom:link href="https://hitzhangjie.github.io/tags/goroutine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go风格协程库libmill之源码分析</title>
      <link>https://hitzhangjie.github.io/blog/2017-12-03-go%E9%A3%8E%E6%A0%BC%E5%8D%8F%E7%A8%8B%E5%BA%93libmill%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 03 Dec 2017 16:49:09 +0800</pubDate>
      
      <guid>https://hitzhangjie.github.io/blog/2017-12-03-go%E9%A3%8E%E6%A0%BC%E5%8D%8F%E7%A8%8B%E5%BA%93libmill%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>1 Preface 2 Introduction  2.1 libmill简介 2.2 libmill vs goroutine   3 Coroutine  3.1 libmill  3.1.1 ABI版本 3.1.2 符号可见性 3.1.3 定时器精度 3.1.4 mill_fdwait关注的io事件 3.1.5 协程上下文的保存和切换  3.1.5.1 协程上下文 3.1.5.2 协程上下文的保存 3.1.5.3 协程上下文的恢复   3.1.6 go(func)实现 3.1.7 chan实现  3.1.7.1 常用数据结构 3.1.7.2 发送数据到chan 3.1.7.3 从chan接收数据 3.1.7.4 chan操作结束   3.1.8 choose从句实现  3.1.8.1 从句初始化 3.1.8.2 读就绪事件 3.1.8.3 写就绪事件 3.1.8.4 deadline实现 3.1.8.5 otherwise实现 3.1.8.6 从句结束     3.</description>
    </item>
    
  </channel>
</rss>