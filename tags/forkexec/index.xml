<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>forkexec on 介绍</title>
    <link>https://hitzhangjie.github.io/tags/forkexec/</link>
    <description>Recent content in forkexec on 介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 28 Aug 2020 03:36:59 +0800</lastBuildDate>
    
	<atom:link href="https://hitzhangjie.github.io/tags/forkexec/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go程序如何实现热重启</title>
      <link>https://hitzhangjie.github.io/blog/2020-08-28-go%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%87%8D%E5%90%AF/</link>
      <pubDate>Fri, 28 Aug 2020 03:36:59 +0800</pubDate>
      
      <guid>https://hitzhangjie.github.io/blog/2020-08-28-go%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%87%8D%E5%90%AF/</guid>
      <description>最近在优化公司框架trpc时发现了一个热重启相关的问题，优化之余也总结沉淀下，对go如何实现热重启这方面的内容做一个简单的梳理。 1.什么是热重启？ 热重启（Hot Restart），是一项保证服务可用性的手段。它允许服务重启期间，不中断已经建立的连接，原来的服务进程不再接受新的连接请求（也可以将连接套接字设置为读端关闭，不再接受新的请求），新的连接请求将在新的服务进程中受理。通过这种方式，可以保证已经建立的连接不中断，连接上的事务（请求、处理、响应）可以正常完成，老的服务进程等所有连接上的请求处理完毕之后，再退</description>
    </item>
    
  </channel>
</rss>