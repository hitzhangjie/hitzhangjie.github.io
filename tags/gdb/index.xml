<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gdb on</title><link>/tags/gdb/</link><description>Recent content in gdb on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sun, 10 Apr 2022 13:05:20 +0800</lastBuildDate><atom:link href="/tags/gdb/index.xml" rel="self" type="application/rss+xml"/><item><title>macOS 10.15.7安装配置gdb</title><link>/blog/2022-04-10-macos-10.15.7%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgdb/</link><pubDate>Sun, 10 Apr 2022 13:05:20 +0800</pubDate><guid>/blog/2022-04-10-macos-10.15.7%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgdb/</guid><description>问题简介 # gdb作为一款符号级调试器，是广大开发人员排查问题的神兵利器，但是因为macOS darwin内核的一些调整，gdb出现了各种神奇的bug行为，如权限问题导致的无法启动调试、启动调试后调试会话卡死等等。
作者此前也曾经因为此类问题而苦恼，甚至不得不放弃了使用gdb调试器而使用其他办法来排查。最近在通过homebrew安装jupyterlab的时候发现gdb被升级了，就突然想起了之前被搁置的这个问题，测试后发现gdb还是不可正常使用。因此google一圈加不断测试，最终终于成功了。
这里总结下方便日后查阅，也供遇到类似问题的朋友参考，这确实是一个老大难的问题了。google能发现很多针对该问题的讨论，难兄难弟们，let&amp;rsquo;s go。
如何解决 # download the source code zip file from https://github.com/bminor/binutils-gdb.git, unzip the zipfile to ./binutils-gdb-master
then try to build from master HEAD
mkdir build cd build ../binutils-gdb-master/configure \ --disable-unit-tests \ --disable-binutils \ --without-guile make -j8 the built gdb binary is put here: ./gdb/gdb. Because I want to make package management simpler, so I don&amp;rsquo;t want to run make install to install the gdb and other files.</description></item></channel></rss>