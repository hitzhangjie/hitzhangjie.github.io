<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kmemleak on</title><link>/tags/kmemleak/</link><description>Recent content in kmemleak on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 08 Jul 2022 00:52:25 +0800</lastBuildDate><atom:link href="/tags/kmemleak/index.xml" rel="self" type="application/rss+xml"/><item><title>内核中的内存检查工具</title><link>/blog/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98%E6%A3%80%E6%9F%A5/</link><pubDate>Fri, 08 Jul 2022 00:52:25 +0800</pubDate><guid>/blog/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98%E6%A3%80%E6%9F%A5/</guid><description>kmemcheck.txt # kmemcheck用于内核的未初始化内存的动态检测，它工作在内核态，与工作在用户态的 memcheck实现机制不同。虽然kmemcheck不如memcheck精确，但是已经足够使用的了。此外，kmemcheck会使用更多的内存，增加系统负载，仅适合用于内核的调试。
kmemleak.txt # kmemleak是一个工作在内核态，用于检测内核中内存泄漏的工具，与工作在用户态的内存泄漏检测工具memcheck加参数&amp;ndash;leak-check工作时效果类似。
为了加深对内存管理的理解，应该查看下这两个工具的源代码。</description></item></channel></rss>