<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>io on 介绍</title>
    <link>https://hitzhangjie.github.io/tags/io/</link>
    <description>Recent content in io on 介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 02 May 2017 21:42:13 +0800</lastBuildDate>
    
	<atom:link href="https://hitzhangjie.github.io/tags/io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux常见IO模型</title>
      <link>https://hitzhangjie.github.io/blog/2017-05-02-linux-common-io-model/</link>
      <pubDate>Tue, 02 May 2017 21:42:13 +0800</pubDate>
      
      <guid>https://hitzhangjie.github.io/blog/2017-05-02-linux-common-io-model/</guid>
      <description>0 目录结构  1. 阻塞IO模型 2. 非阻塞IO模型 3. IO多路复用模型  3.1. select 3.2. poll 3.3. epoll   4. 实时信号驱动IO模型  4.1 rtsig在udp中应用 4.2 rtsig在tcp中应用   5. 异步IO模型  5.1. AIO API说明  5.1.1. POSIX AIO API 5.1.2. Linux AIO SysCall   5.2. AIO操作示例  5.2.1. Kernel AIO SysCall 5.2.2. POSIX AIO API   5.3 AIO在服务端开发中的应用 5.4 关于AIO的结论   6 本文总结 附录A. 错误码定义 附录B. 插图信息  目前Linux下可用的IO模型有5种，分别为阻塞IO、非阻塞IO、IO多路复用、信号驱动IO、异步IO，其中较为成熟且高效、稳定的是IO多路复用模型，因此当前众多网络服务程序几乎都是采用这种IO操作策略。</description>
    </item>
    
  </channel>
</rss>