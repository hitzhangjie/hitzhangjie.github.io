<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>method on 介绍</title>
    <link>https://www.hitzhangjie.pro/tags/method/</link>
    <description>Recent content in method on 介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 21 May 2018 12:33:23 +0800</lastBuildDate><atom:link href="https://www.hitzhangjie.pro/tags/method/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang method receiver-type的梗</title>
      <link>https://www.hitzhangjie.pro/blog/2018-05-21-golang-method-receiver-type%E7%9A%84%E6%A2%97/</link>
      <pubDate>Mon, 21 May 2018 12:33:23 +0800</pubDate>
      
      <guid>https://www.hitzhangjie.pro/blog/2018-05-21-golang-method-receiver-type%E7%9A%84%E6%A2%97/</guid>
      <description>这里来聊聊method receiver type为什么不能是pointer和interface类型。 1 receiver-type必须满足的条件 golang里面提供了一定的面向对象支持，比如我们可以为类型T或者*T定义成员方法（类型T称为成员方法的receiver-type），但是这里的类型T必须满足如下几个条件： T必须是已经定义过的类型； T与当前方法定义必须在同一个package下面； T不能是指针； T不能是接口类型； 前面两点都比较容易理解，下面两点是什么梗？为什么就不能在指针类型上添加方法？为什么就不能在interface</description>
    </item>
    
  </channel>
</rss>
